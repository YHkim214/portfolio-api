<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yoonho.holoboard.repositories.BbsRepository">

    <insert id="insertBbs" parameterType="com.yoonho.holoboard.models.Bbs">
        INSERT INTO TB_BBS (
                            BBS_ID,
                            MEMBER_ID,
                            LS_ID,
                            BBS_CONTENT,
                            BBS_TYPE,
                            BBS_PARENT_ID,
                            BBS_STATUS
        )
        VALUES (
                   #{bbs.bbsId},
                   #{bbs.memberId},
                   #{bbs.lsId},
                   #{bbs.bbsContent},
                   #{bbs.bbsType},
                   #{bbs.bbsParentId},
                   #{bbs.bbsStatus}
        )
    </insert>

    <select id="getBbsByLsId" resultMap="bbsResult">
        <include refid="bbs"/>
        WHERE 1 = 1
        AND TB.LS_ID = #{lsId}
        AND (TB.BBS_TYPE = 'NORMAL' or TB.BBS_TYPE = 'NOTICE')
        ORDER BY TB.CREATE_TIME DESC
        <if test="pageInfo != null">
            LIMIT #{pageInfo.start}, #{pageInfo.size}
        </if>
    </select>

    <select id="getBbsById" resultMap="bbsResult">
        <include refid="bbs"/>
        WHERE 1 = 1
        AND TB.BBS_ID = #{bbsId}
    </select>

    <update id="updateBbs">
        UPDATE TB_BBS SET BBS_CONTENT = #{bbsContent}, UPDATE_TIME = CURRENT_TIMESTAMP WHERE BBS_ID = #{bbsId}
    </update>

    <delete id="deleteBbs">
        DELETE FROM TB_BBS WHERE BBS_ID = #{bbsId}
    </delete>

    <delete id="deleteRecommend">
        DELETE FROM TB_BBS_GOOD WHERE BBS_ID = #{bbsId}
    </delete>

    <insert id="recommend">
        INSERT INTO TB_BBS_GOOD (BBS_ID, MEMBER_ID) VALUES (#{bbsId}, #{memberId});
    </insert>

    <delete id="cancelRecommend">
        DELETE FROM TB_BBS_GOOD WHERE BBS_ID = #{bbsId} AND MEMBER_ID = #{memberId};
    </delete>

    <resultMap id="bbsResult" type="com.yoonho.holoboard.models.Bbs">
        <id property="bbsId" column="bbsId"/>
        <result property="memberId" column="memberId"/>
        <result property="lsId" column="lsId"/>
        <result property="bbsContent" column="bbsContent"/>
        <result property="bbsGoodCnt" column="bbsGoodCnt"/>
        <result property="bbsType" column="bbsType"/>
        <result property="bbsParentId" column="bbsParentId"/>
        <result property="bbsStatus" column="bbsStatus"/>
        <result property="createTime" column="createTime"/>
        <result property="updateTime" column="updateTime"/>
        <result property="isRecommended" column="isRecommended"/>
        <association property="member" column="tm_memberId" resultMap="memberResult"/>
        <association property="children" column="tb2_bbsId" resultMap="bbsChildResult"/>
    </resultMap>

    <resultMap id="bbsChildResult" type="com.yoonho.holoboard.models.Bbs">
        <id property="bbsId" column="tb2_bbsId"/>
        <result property="memberId" column="tb2_memberId"/>
        <result property="lsId" column="tb2_lsId"/>
        <result property="bbsContent" column="tb2_bbsContent"/>
        <result property="bbsGoodCnt" column="tb2_bbsGoodCnt"/>
        <result property="bbsType" column="tb2_bbsType"/>
        <result property="bbsParentId" column="tb2_bbsParentId"/>
        <result property="bbsStatus" column="tb2_bbsStatus"/>
        <result property="createTime" column="tb2_createTime"/>
        <result property="updateTime" column="tb2_updateTime"/>
        <result property="isRecommended" column="tb2_isRecommended"/>
        <association property="member" column="tm2_memberId" resultMap="memberResult2"/>
    </resultMap>

    <resultMap id="memberResult" type="com.yoonho.holoboard.models.Member">
        <id property="memberId" column="tm_memberId"/>
        <result property="memberNickName" column="tm_memberNickName"/>
    </resultMap>

    <resultMap id="memberResult2" type="com.yoonho.holoboard.models.Member">
        <id property="memberId" column="tm2_memberId"/>
        <result property="memberNickName" column="tm2_memberNickName"/>
    </resultMap>

    <sql id="bbs">
        SELECT
            TB.BBS_ID               AS bbsId,
            TB.MEMBER_ID            AS memberId,
            TB.LS_ID                AS lsId,
            TB.BBS_CONTENT          AS bbsContent,
            (SELECT COUNT(*) FROM TB_BBS_GOOD TBG WHERE TB.BBS_ID = TBG.BBS_ID)
                                    AS bbsGoodCnt,
            TB.BBS_TYPE             AS bbsType,
            TB.BBS_PARENT_ID        AS bbsParentId,
            TB.BBS_STATUS           AS bbsStatus,
            TB.CREATE_TIME          AS createTime,
            TB.UPDATE_TIME          AS updateTime,

            <if test="memberId != null">
            (SELECT EXISTS(SELECT * FROM TB_BBS_GOOD TBG WHERE TBG.BBS_ID=TB.BBS_ID AND TBG.MEMBER_ID = #{memberId}))
                                    AS isRecommended,
            </if>

            TM.MEMBER_ID            AS tm_memberId,
            TM.MEMBER_NICKNAME      AS tm_memberNickname,

            TB2.BBS_ID               AS tb2_bbsId,
            TB2.MEMBER_ID            AS tb2_memberId,
            TB2.LS_ID                AS tb2_lsId,
            TB2.BBS_CONTENT          AS tb2_bbsContent,
            (SELECT COUNT(*) FROM TB_BBS_GOOD TBG WHERE TB2.BBS_ID = TBG.BBS_ID)
                                     AS tb2_bbsGoodCnt,
            TB2.BBS_TYPE             AS tb2_bbsType,
            TB2.BBS_PARENT_ID        AS tb2_bbsParentId,
            TB2.BBS_STATUS           AS tb2_bbsStatus,
            TB2.CREATE_TIME          AS tb2_createTime,
            TB2.UPDATE_TIME          AS tb2_updateTime,

            <if test="memberId != null">
            (SELECT EXISTS(SELECT * FROM TB_BBS_GOOD TBG WHERE TBG.BBS_ID = TB2.BBS_ID AND TBG.MEMBER_ID = #{memberId}))
                                     AS tb2_isRecommended,
            </if>

            TM2.MEMBER_ID            AS tm2_memberId,
            TM2.MEMBER_NICKNAME      AS tm2_memberNickname
        FROM TB_BBS AS TB
        LEFT JOIN TB_MEMBER AS TM ON TB.MEMBER_ID = TM.MEMBER_ID
        LEFT JOIN TB_BBS AS TB2 ON TB.BBS_ID = TB2.BBS_PARENT_ID
        LEFT JOIN TB_MEMBER TM2 ON TB2.MEMBER_ID = TM2.MEMBER_ID
    </sql>

</mapper>